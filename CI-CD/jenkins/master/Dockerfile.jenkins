FROM jenkins/jenkins:lts as init-jenkins

USER root
# Skip install plugins wizard
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false

# Install init plugins
RUN jenkins-plugin-cli --plugins docker-workflow cloudbees-folder timestamper \
ws-cleanup pipeline-stage-view pam-auth pipeline-github-lib \
matrix-auth ssh build-timeout github-branch-source  ssh-slaves \
email-ext antisamy-markup-formatter workflow-aggregator git ldap authorize-project \
configuration-as-code kubernetes-cli ssh-agent config-file-provider



FROM jenkins/jenkins:lts as setup

USER root
ARG COMPOSE_RELEASE=v2.3.3
ARG KUBERNETES_RELEASE=v1.23.3
ARG HELM_RELEASE=v3.8.2
ARG TERRAFORM_RELEASE=1.1.9
ARG KUBEBENCH_VERSION=0.6.8
ARG TRIVY_VERSION=0.28.0

# Install binaries
RUN \
# Download kubectl release
curl -L https://dl.k8s.io/release/${KUBERNETES_RELEASE}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl  && \
  chmod +x /usr/local/bin/kubectl &&\
# Install docker-compose
curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_RELEASE}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose &&\
# Install helm 
curl -LO https://get.helm.sh/helm-${HELM_RELEASE}-linux-amd64.tar.gz && tar -zxvf helm-${HELM_RELEASE}-linux-amd64.tar.gz && mv linux-amd64/helm /usr/local/bin/ && \
    chmod +x /usr/local/bin/helm &&\
# Install Terraform
curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_RELEASE}/terraform_${TERRAFORM_RELEASE}_linux_amd64.zip && unzip terraform_${TERRAFORM_RELEASE}_linux_amd64.zip && mv terraform /usr/local/bin/ && \
    chmod +x /usr/local/bin/terraform &&\
# Install kube-bench
mkdir -p kube-bench && cd kube-bench && curl -LO https://github.com/aquasecurity/kube-bench/releases/download/v${KUBEBENCH_VERSION}/kube-bench_${KUBEBENCH_VERSION}_linux_amd64.tar.gz && tar -zxvf kube-bench_${KUBEBENCH_VERSION}_linux_amd64.tar.gz && \
mv kube-bench /usr/local/bin/ && mkdir -p /etc/kube-bench && cp -r cfg/ /etc/kube-bench/ &&\
# Download trivy release
mkdir -p trivy && cd trivy && curl -LO https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz && tar -zxvf trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz && mv trivy /usr/local/bin/


# Create kubeconfig file
ARG KUBECONFIG_FILE
RUN mkdir -p /root/.kube && \
    echo "${KUBECONFIG_FILE}" > /root/.kube/config && \
    chmod 700 /root/.kube


# add credentials on build and
# make sure your domain is accepted
ARG SSH_PRIVATE_KEY
RUN mkdir -p /root/.ssh/ && \
    echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa && \
    chmod 700 /root/.ssh/id_rsa  && \
    touch /root/.ssh/known_hosts && \
    ssh-keyscan 192.168.1.124>> /root/.ssh/known_hosts
# credentialsId: 'jenkins_ssh_key'

FROM init-jenkins as startup


# Install azure cli
RUN apt-get update && apt-get install -y ca-certificates curl apt-transport-https lsb-release gnupg &&\
curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null &&\
AZ_REPO=$(lsb_release -cs) && echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | tee /etc/apt/sources.list.d/azure-cli.list  &&\
apt-get update &&   apt-get install azure-cli

COPY --from=setup /usr/local/bin /usr/local/bin
COPY --from=setup /etc/kube-bench/ /etc/kube-bench/

COPY --from=setup  /root/.ssh /root/.ssh
COPY --from=setup /root/.kube /root/.kube

# Setup Jenkins init admin User
ENV JENKINS_USER admin
ENV JENKINS_PASS admin

#COPY init groovy scropts
COPY  /init.groovy/ /usr/share/jenkins/ref/init.groovy.d/
# Copy jenkins jobs
COPY /jenkins_home/jobs ${JENKINS_HOME}/jobs
# Copy jenkins views
COPY /jenkins_home/views.xml ${JENKINS_HOME}/config.xml
# COPY HELM CONFIG DEFINITION TO JENKINS CONFIG PROVIDER
COPY /jenkins_home/config.xml  /var/jenkins_home/org.jenkinsci.plugins.configfiles.GlobalConfigFiles.xml

# Give access to jenkins user "home + socket + var log dir"
RUN mkdir -p /var/log/kube-bench && mkdir -p /var/log/trivy &&\
chown -R jenkins:jenkins ${JENKINS_HOME} &&\
chown -R jenkins:jenkins /root &&\
# THIS IS CRITICAL
chown -R jenkins:jenkins /var/run &&\
chown -R jenkins:jenkins /var/log/kube-bench &&\
chown -R jenkins:jenkins /var/log/trivy




USER jenkins
